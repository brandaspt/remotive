{"version":3,"sources":["components/FavoritesIndicator/FavoritesIndicator.jsx","components/TopBar/TopBar.jsx","backend/backend.js","redux/types/types.js","redux/actions/actions.js","components/FiltersBar/FiltersBar.jsx","components/ToggleFavoriteIcon/ToggleFavoriteIcon.jsx","components/JobCard/JobCard.jsx","components/JobsGrid/JobsGrid.jsx","views/Home.jsx","components/CompanyDetails/CompanyDetails.jsx","views/Company.jsx","components/FavoriteItem/FavoriteItem.jsx","views/FavoriteCompanies.jsx","views/FavoriteJobs.jsx","App.js","redux/reducers/favorites.js","redux/reducers/search.js","redux/store.js","index.js"],"names":["connect","state","withRouter","type","list","history","className","onClick","e","push","length","favorites","id","Container","fluid","to","companies","jobs","remotive","axios","create","baseURL","process","ADD_COMPANY_TO_FAVORITES","REMOVE_COMPANY_FROM_FAVORITES","ADD_JOB_TO_FAVORITES","REMOVE_JOB_FROM_FAVORITES","SET_SEARCH_JOBS","SET_SEARCH_LOADING","fetchJobs","endpoint","dispatch","getState","a","types","payload","get","data","console","log","getJobs","useState","categories","setCategories","isLoading","setIsLoading","searchQuery","setSearchQuery","getCategories","useCallback","name","useEffect","Row","Spinner","animation","variant","Dropdown","Toggle","Menu","map","category","Item","onSelect","Form","Group","Control","placeholder","value","onChange","target","onKeyDown","key","Button","addCompanyToFavorites","companyName","removeCompanyFromFavorites","addJobToFavorites","job","removeJobFromFavorites","jobId","props","includes","find","JobCard","isShowingDesc","setIsShowingDesc","Card","Body","Title","title","Badge","Text","moment","Date","publication_date","fromNow","job_type","candidate_required_location","salary","company_name","Subtitle","size","dangerouslySetInnerHTML","__html","description","JobsGrid","jobsList","search","results","loading","match","setJobsList","getCompanyDetails","params","Company","FavoriteItem","App","exact","path","component","Home","FavoriteCompanies","FavoriteJobs","favoritesReducer","initialState","action","filter","searchReducer","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","mainReducer","combineReducers","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b17e0540.chunk.js","sourcesContent":["import { connect } from \"react-redux\"\nimport { withRouter } from \"react-router-dom\"\n\nimport \"./FavoritesIndicator.css\"\n\nconst mapStateToProps = state => state\n\nconst FavoritesIndicator = ({ type, list, history }) => {\n  return (\n    <div\n      className=\"FavoritesIndicator d-flex align-items-center justify-content-center p-2 mx-2\"\n      onClick={e => {\n        if (type === \"companies\") history.push(\"/favoriteCompanies\")\n        else history.push(\"/favoriteJobs\")\n      }}\n    >\n      <p className=\"m-0\">{`Favorite ${type}`}</p>\n      <div className=\"num-of-favs d-flex align-items-center justify-content-center\">{list.length}</div>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps)(withRouter(FavoritesIndicator))\n","import { Container } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport { connect } from \"react-redux\"\n\nimport FavoritesIndicator from \"../FavoritesIndicator/FavoritesIndicator\"\n\nimport \"./TopBar.css\"\n\nconst mapStateToProps = state => state\n\nconst TopBar = ({ favorites }) => {\n  return (\n    <div id=\"fixed-compensator\">\n      <Container fluid className=\"TopBar d-flex align-items-center\">\n        <Link to=\"/\" className=\"mr-auto\">\n          <h1 className=\"py-1 text-center m-0\">Remotive Strive</h1>\n        </Link>\n        <FavoritesIndicator type=\"companies\" list={favorites.companies} />\n        <FavoritesIndicator type=\"jobs\" list={favorites.jobs} />\n      </Container>\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps)(TopBar)\n","import axios from \"axios\"\n\nconst remotive = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_URL,\n})\n\nexport default remotive\n","export const ADD_COMPANY_TO_FAVORITES = \"ADD_COMPANY_TO_FAVORITES\"\nexport const REMOVE_COMPANY_FROM_FAVORITES = \"REMOVE_COMPANY_FROM_FAVORITES\"\nexport const ADD_JOB_TO_FAVORITES = \"ADD_JOB_TO_FAVORITES\"\nexport const REMOVE_JOB_FROM_FAVORITES = \"REMOVE_JOB_FROM_FAVORITES\"\nexport const SET_SEARCH_JOBS = \"SET_SEARCH_JOBS\"\nexport const SET_SEARCH_LOADING = \"SET_SEARCH_LOADING\"\n","import remotive from \"../../backend/backend\"\nimport * as types from \"../types/types\"\n\nexport const addCompanyToFavorites = companyName => ({\n  type: types.ADD_COMPANY_TO_FAVORITES,\n  payload: companyName,\n})\n\nexport const removeCompanyFromFavorites = companyName => ({\n  type: types.REMOVE_COMPANY_FROM_FAVORITES,\n  payload: companyName,\n})\n\nexport const addJobToFavorites = job => ({\n  type: types.ADD_JOB_TO_FAVORITES,\n  payload: job,\n})\n\nexport const removeJobFromFavorites = jobId => ({\n  type: types.REMOVE_JOB_FROM_FAVORITES,\n  payload: jobId,\n})\n\nexport const fetchJobs = endpoint => {\n  return async (dispatch, getState) => {\n    dispatch({\n      type: types.SET_SEARCH_LOADING,\n      payload: true,\n    })\n    try {\n      const { data } = await remotive.get(endpoint)\n      dispatch({\n        type: types.SET_SEARCH_JOBS,\n        payload: data.jobs,\n      })\n      dispatch({\n        type: types.SET_SEARCH_LOADING,\n        payload: false,\n      })\n    } catch (error) {\n      console.log(error)\n      dispatch({\n        type: types.SET_SEARCH_LOADING,\n        payload: false,\n      })\n    }\n  }\n}\n","import { useState, useCallback, useEffect } from \"react\"\nimport { Button, Dropdown, Form, Row, Spinner } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\nimport remotive from \"../../backend/backend\"\nimport { fetchJobs } from \"../../redux/actions/actions\"\n\nconst mapStateToProps = state => state\nconst mapDispatchToProps = dispatch => ({\n  getJobs: endpoint => dispatch(fetchJobs(endpoint)),\n})\n\nconst FiltersBar = ({ getJobs }) => {\n  const [categories, setCategories] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [searchQuery, setSearchQuery] = useState(\"\")\n\n  const getCategories = useCallback(async () => {\n    setIsLoading(true)\n    const { data } = await remotive.get(\"/remote-jobs/categories\")\n    setCategories([{ name: \"All\", id: 0 }, ...data.jobs])\n    setIsLoading(false)\n  }, [])\n\n  useEffect(() => {\n    getCategories()\n  }, [getCategories])\n\n  return (\n    <Row className=\"d-flex flex-column align-items-start justify-content-center py-4\">\n      {isLoading ? (\n        <Spinner animation=\"border\" variant=\"info\" />\n      ) : (\n        <div\n          className=\"d-flex w-100 align-items-end justify-content-between\"\n          // onSubmit={e => {\n          //   e.preventDefault()\n          //   getJobs(`/remote-jobs?search=${searchQuery}`)\n          // }}\n        >\n          <Dropdown>\n            <Dropdown.Toggle variant=\"outline-secondary\">Categories</Dropdown.Toggle>\n\n            <Dropdown.Menu>\n              {categories.map(category => (\n                <Dropdown.Item\n                  key={category.id}\n                  onSelect={() => {\n                    if (category.name === \"All\") getJobs(\"/remote-jobs?limit=200\")\n                    else {\n                      getJobs(`/remote-jobs?category=${category.name}`)\n                    }\n                  }}\n                >\n                  {category.name}\n                </Dropdown.Item>\n              ))}\n            </Dropdown.Menu>\n          </Dropdown>\n          <Form.Group className=\"d-flex m-0\">\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Search\"\n              className=\"mr-sm-2\"\n              value={searchQuery}\n              onChange={e => setSearchQuery(e.target.value)}\n              onKeyDown={e => {\n                if (e.key === \"Enter\") getJobs(`/remote-jobs?search=${searchQuery}`)\n              }}\n            />\n            <Button\n              variant=\"secondary\"\n              onClick={e => {\n                getJobs(`/remote-jobs?search=${searchQuery}`)\n              }}\n            >\n              Search\n            </Button>\n          </Form.Group>\n        </div>\n      )}\n    </Row>\n  )\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(FiltersBar)\n","import { connect } from \"react-redux\"\nimport { addCompanyToFavorites, addJobToFavorites, removeCompanyFromFavorites, removeJobFromFavorites } from \"../../redux/actions/actions\"\n\nimport \"./ToggleFavoriteIcon.css\"\n\nconst mapStateToProps = state => state\nconst mapDispatchToProps = dispatch => ({\n  addCompanyToFavorites: companyName => dispatch(addCompanyToFavorites(companyName)),\n  removeCompanyFromFavorites: companyName => dispatch(removeCompanyFromFavorites(companyName)),\n  addJobToFavorites: job => dispatch(addJobToFavorites(job)),\n  removeJobFromFavorites: jobId => dispatch(removeJobFromFavorites(jobId)),\n})\n\nconst ToggleFavoriteIcon = props => {\n  return (\n    <div className=\"ToggleFavoriteIcon\">\n      {(props.companyName && props.favorites.companies.includes(props.companyName)) ||\n      (props.job && props.favorites.jobs.find(job => job.id === props.job.id)) ? (\n        <i\n          className=\"fas fa-star\"\n          onClick={e => {\n            if (props.companyName) props.removeCompanyFromFavorites(props.companyName)\n            else props.removeJobFromFavorites(props.job.id)\n          }}\n        ></i>\n      ) : (\n        <i\n          className=\"far fa-star\"\n          onClick={e => {\n            if (props.companyName) props.addCompanyToFavorites(props.companyName)\n            else props.addJobToFavorites(props.job)\n          }}\n        ></i>\n      )}\n    </div>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ToggleFavoriteIcon)\n","import { useState } from \"react\"\nimport { Badge, Card, Button } from \"react-bootstrap\"\nimport { Link } from \"react-router-dom\"\nimport moment from \"moment\"\n\nimport \"./JobCard.css\"\nimport ToggleFavoriteIcon from \"../ToggleFavoriteIcon/ToggleFavoriteIcon\"\n\nconst JobCard = ({ job }) => {\n  const [isShowingDesc, setIsShowingDesc] = useState(false)\n  return (\n    <Card className=\"JobCard my-1\">\n      <Card.Body>\n        <div className=\"d-flex align-items-center\">\n          <ToggleFavoriteIcon job={job} />\n          <Card.Title className=\"my-0 ml-2 mr-4\">{job.title}</Card.Title>\n          <Badge variant=\"info\" className=\"my-auto\">\n            {job.category}\n          </Badge>\n        </div>\n        <div className=\"d-flex justify-content-between align-items-center\">\n          <div>\n            <Card.Text className=\"m-0\">\n              <small>\n                <i className=\"fas fa-calendar-day\"></i> {moment(new Date(job.publication_date)).fromNow()}\n              </small>\n            </Card.Text>\n            {job.job_type && (\n              <Card.Text className=\"job-type m-0\">\n                <small>\n                  <i className=\"far fa-clock\"></i> {job.job_type}\n                </small>\n              </Card.Text>\n            )}\n            {job.candidate_required_location && (\n              <Card.Text className=\"job-type m-0\">\n                <small>\n                  <i className=\"fas fa-map-marked-alt\"></i> {job.candidate_required_location}\n                </small>\n              </Card.Text>\n            )}\n            {job.salary && (\n              <Card.Text className=\"m-0\">\n                <small>\n                  <i className=\"fas fa-money-bill-wave\"></i> {job.salary}\n                </small>\n              </Card.Text>\n            )}\n          </div>\n          <div className=\"d-flex align-items-center\">\n            <ToggleFavoriteIcon companyName={job.company_name} />\n            <Link to={`/companies/${job.company_name}`}>\n              <Card.Subtitle className=\"m-0 ml-2 text-muted text-right\">{job.company_name}</Card.Subtitle>\n            </Link>\n          </div>\n        </div>\n        <Button\n          variant={isShowingDesc ? \"warning\" : \"secondary\"}\n          size=\"sm\"\n          className=\"w-100 mt-2\"\n          onClick={() => setIsShowingDesc(!isShowingDesc)}\n        >\n          {isShowingDesc ? \"Hide Description\" : \"Show Description\"}\n        </Button>\n        {isShowingDesc && (\n          <div className=\"d-flex flex-column justify-content-end\">\n            <Card.Text className=\"mt-2 mb-0\">\n              <small dangerouslySetInnerHTML={{ __html: job.description }}></small>\n            </Card.Text>\n            <Button\n              variant={isShowingDesc ? \"warning\" : \"secondary\"}\n              size=\"sm\"\n              className=\"mt-2\"\n              onClick={() => setIsShowingDesc(!isShowingDesc)}\n            >\n              {isShowingDesc ? \"Hide Description\" : \"Show Description\"}\n            </Button>\n          </div>\n        )}\n      </Card.Body>\n    </Card>\n  )\n}\nexport default JobCard\n","import { Row, Spinner } from \"react-bootstrap\"\n\nimport JobCard from \"../JobCard/JobCard\"\n\nconst JobsGrid = ({ jobsList, isLoading }) => {\n  return (\n    <Row className=\"d-flex flex-column align-items-center justify-content-center py-4\">\n      {isLoading ? (\n        <Spinner animation=\"border\" variant=\"info\" />\n      ) : (\n        <>\n          <h3>{`Showing ${jobsList.length} ${jobsList.length > 1 ? \"jobs\" : \"job\"}!`}</h3>\n          {jobsList.map(job => (\n            <JobCard key={job.id} job={job} />\n          ))}\n        </>\n      )}\n    </Row>\n  )\n}\n\nexport default JobsGrid\n","import { useEffect } from \"react\"\nimport { connect } from \"react-redux\"\nimport { Container } from \"react-bootstrap\"\n\nimport FiltersBar from \"../components/FiltersBar/FiltersBar\"\nimport JobsGrid from \"../components/JobsGrid/JobsGrid\"\nimport { fetchJobs } from \"../redux/actions/actions\"\n\nconst mapStateToProps = state => state\nconst mapDispatchToProps = dispatch => ({\n  getJobs: endpoint => dispatch(fetchJobs(endpoint)),\n})\n\nconst Home = ({ search, getJobs }) => {\n  useEffect(() => {\n    getJobs(\"/remote-jobs?limit=200\")\n  }, [getJobs])\n\n  return (\n    <Container>\n      <FiltersBar />\n      <JobsGrid jobsList={search.results} isLoading={search.loading} />\n    </Container>\n  )\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home)\n","import { useState, useEffect, useCallback } from \"react\"\nimport { withRouter } from \"react-router-dom\"\nimport remotive from \"../../backend/backend\"\nimport JobsGrid from \"../JobsGrid/JobsGrid\"\n\nconst CompanyDetails = ({ match }) => {\n  const [jobsList, setJobsList] = useState([])\n  const [isLoading, setIsLoading] = useState(false)\n\n  const getCompanyDetails = useCallback(async () => {\n    setIsLoading(true)\n    const { data } = await remotive.get(`/remote-jobs?company_name=${match.params.company_name}`)\n    setJobsList(data.jobs)\n    setIsLoading(false)\n  }, [match.params.company_name])\n\n  useEffect(() => {\n    getCompanyDetails()\n  }, [getCompanyDetails])\n\n  return (\n    <>\n      <h2 className=\"text-center text-muted my-1\">Company: {match.params.company_name}</h2>\n      <JobsGrid jobsList={jobsList} isLoading={isLoading} />\n    </>\n  )\n}\n\nexport default withRouter(CompanyDetails)\n","import { Container } from \"react-bootstrap\"\nimport CompanyDetails from \"../components/CompanyDetails/CompanyDetails\"\n\nconst Company = () => {\n  return (\n    <Container>\n      <CompanyDetails />\n    </Container>\n  )\n}\n\nexport default Company\n","import { Link } from \"react-router-dom\"\nimport ToggleFavoriteIcon from \"../ToggleFavoriteIcon/ToggleFavoriteIcon\"\n\nimport \"./FavoriteItem.css\"\n\nconst FavoriteItem = ({ companyName }) => {\n  return (\n    <div className=\"FavoriteItem text-center d-flex align-items-center justify-content-center m-3\">\n      <ToggleFavoriteIcon companyName={companyName} />\n      <Link to={`/companies/${companyName}`}>\n        <h2>{companyName}</h2>\n      </Link>\n    </div>\n  )\n}\n\nexport default FavoriteItem\n","import { Container } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\nimport FavoriteItem from \"../components/FavoriteItem/FavoriteItem\"\n\nconst mapStateToProps = state => state\n\nconst FavoriteCompanies = ({ favorites }) => {\n  return (\n    <Container>\n      <h3 className=\"text-center my-4\">Favorite Companies</h3>\n      <div className=\"d-flex flex-wrap justify-content-center align-items-center\">\n        {favorites.companies.map(companyName => (\n          <FavoriteItem key={companyName} companyName={companyName} />\n        ))}\n      </div>\n    </Container>\n  )\n}\n\nexport default connect(mapStateToProps)(FavoriteCompanies)\n","import { Container } from \"react-bootstrap\"\nimport { connect } from \"react-redux\"\n\nimport JobsGrid from \"../components/JobsGrid/JobsGrid\"\n\nconst mapStateToProps = state => state\n\nconst FavoriteJobs = ({ favorites }) => {\n  return (\n    <Container>\n      <h3 className=\"text-center my-4\">Favorite Jobs</h3>\n      <JobsGrid jobsList={favorites.jobs} />\n    </Container>\n  )\n}\n\nexport default connect(mapStateToProps)(FavoriteJobs)\n","import { Route } from \"react-router-dom\"\n\nimport TopBar from \"./components/TopBar/TopBar\"\nimport Home from \"./views/Home\"\n\nimport \"./App.css\"\nimport Company from \"./views/Company\"\nimport FavoriteCompanies from \"./views/FavoriteCompanies\"\nimport FavoriteJobs from \"./views/FavoriteJobs\"\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <TopBar />\n      <Route exact path=\"/\" component={Home} />\n      <Route exact path=\"/favoriteCompanies\" component={FavoriteCompanies} />\n      <Route exact path=\"/favoriteJobs\" component={FavoriteJobs} />\n      <Route path=\"/companies/:company_name\" component={Company} />\n    </div>\n  )\n}\n\nexport default App\n","import * as types from \"../types/types\"\nimport { initialState } from \"../store\"\n\nconst favoritesReducer = (state = initialState.favorites, action) => {\n  switch (action.type) {\n    case types.ADD_COMPANY_TO_FAVORITES:\n      return { ...state, companies: [...state.companies, action.payload] }\n\n    case types.REMOVE_COMPANY_FROM_FAVORITES:\n      return { ...state, companies: [...state.companies.filter(companyName => companyName !== action.payload)] }\n\n    case types.ADD_JOB_TO_FAVORITES:\n      return { ...state, jobs: [...state.jobs, action.payload] }\n\n    case types.REMOVE_JOB_FROM_FAVORITES:\n      return { ...state, jobs: [...state.jobs.filter(job => job.id !== action.payload)] }\n\n    default:\n      return state\n  }\n}\n\nexport default favoritesReducer\n","import * as types from \"../types/types\"\nimport { initialState } from \"../store\"\n\nconst searchReducer = (state = initialState.search, action) => {\n  switch (action.type) {\n    case types.SET_SEARCH_JOBS:\n      return { ...state, results: action.payload }\n\n    case types.SET_SEARCH_LOADING:\n      return { ...state, loading: action.payload }\n    default:\n      return state\n  }\n}\n\nexport default searchReducer\n","import { createStore, combineReducers, compose, applyMiddleware } from \"redux\"\nimport thunk from \"redux-thunk\"\n\nimport favoritesReducer from \"./reducers/favorites\"\nimport searchReducer from \"./reducers/search\"\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\n\nexport const initialState = {\n  favorites: {\n    companies: [],\n    jobs: [],\n  },\n  search: {\n    results: [],\n    loading: false,\n  },\n}\n\nconst mainReducer = combineReducers({\n  favorites: favoritesReducer,\n  search: searchReducer,\n})\n\nconst store = createStore(mainReducer, composeEnhancers(applyMiddleware(thunk)))\n\nexport default store\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport { BrowserRouter as Router } from \"react-router-dom\"\nimport App from \"./App\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport { Provider } from \"react-redux\"\nimport store from \"./redux/store\"\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}